name: Release Python

on:
  release:
    types: [published]
  workflow_dispatch:
    description: "Manually publish release"


jobs:
  is-python-release:
    if: ${{ github.event_name == 'workflow_dispatch' || startsWith(github.event.release.tag_name, 'python/v') }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Release tag starts with python/v, proceeding with release"

  macos:
    runs-on: macos-11
    needs: is-python-release
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        if: matrix.python-version != '3.7'
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.20.1'
      - name: Build wheels - x86_64
        # Python 3.7 does not support aarch64 so we only build it for x86_64
        if: matrix.python-version == '3.7'
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: -i python --release --manifest-path crates/python/Cargo.toml --out dist --sdist
      - name: Build wheels - universal2
        # universal2 supports both x86_64 and aarch64 so every Python > 3.7 only needs this wheel
        if: matrix.python-version != '3.7'
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --universal2 --manifest-path crates/python/Cargo.toml --out dist
      - name: Install wheel
        run: |
          pip install qcs-sdk-python --no-index --find-links dist --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    needs: is-python-release
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        target: [x86_64, aarch64]
    steps:
    - name: Install protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.20.1'
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: 2014
        args: -i ${{ matrix.python-version }} --release --manifest-path crates/python/Cargo.toml --out dist
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, linux ]
    steps:
      - uses: actions/download-artifact@v3
      - name: Publish to PyPi
        env:
          MATURIN_USERNAME: ${{ secrets.PYPI_USERNAME }}
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        uses: messense/maturin-action@v1
        with:
          command: upload 
          args: --skip-existing wheels/*
