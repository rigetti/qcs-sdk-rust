name: Release Python standard and grpc-web clients

on:
  release:
    types: [published]
  push:
    branches: [grpc-web-rc]
  workflow_dispatch:
    description: "Manually publish release"
    inputs:
      publishWheels:
        description: "Build and publish both qcs-sdk-python and qcs-sdk-python-grpc-web wheels to PyPI"
        type: boolean
        default: false

jobs:
  is-python-release:
    if: true || github.event_name == 'workflow_dispatch' || startsWith(github.event.release.tag_name, 'python/v')
    runs-on: ubuntu-latest
    steps:
      - run: echo "Release tag starts with python/v, proceeding with release"
  should-publish-wheels:
    if: true || (github.event_name == 'workflow_dispatch' && inputs.publishWheels) || (github.event_name == 'release' && !github.event.release.prerelease)
    runs-on: ubuntu-latest
    steps:
      - run: echo "Publishing wheels"

  macos:
    runs-on: macos-12
    needs: [is-python-release, should-publish-wheels]
    env:
      CXXFLAGS: "-std=c++11 -stdlib=libc++"
    strategy:
      matrix:
        package-name: [qcs-sdk-python, qcs-sdk-python-grpc-web]
    steps:
    - uses: ./.github/action-common-python-release
      with:
        package-name: ${{ matrix.package-name }}
        rust-target: universal2-apple-darwin
        maturin-args: -i 3.8 3.9 3.10 3.11 3.12 --release

  linux:
    runs-on: ubuntu-latest
    needs: [is-python-release, should-publish-wheels]
    env:
      CXXFLAGS: "-std=c++11"
    strategy:
      matrix:
        package-name: [qcs-sdk-python, qcs-sdk-python-grpc-web]
        target: [x86_64, aarch64, ppc64le]
    steps:
    - uses: ./.github/action-common-python-release
      with:
        package-name: ${{ matrix.package-name }}
        maturin-args: -i 3.8 3.9 3.10 3.11 3.12 --release

  windows: 
    runs-on: windows-latest 
    needs: [is-python-release, should-publish-wheels]
    strategy: 
      matrix: 
        package-name: [qcs-sdk-python, qcs-sdk-python-grpc-web]
    steps: 
    - uses: ./.github/action-common-python-release
      with:
        package-name: ${{ matrix.package-name }}
        python-architectire: x64
        rust-target: x86_64-pc-windows-msvc
        maturin-args: -i 3.8 3.9 3.10 3.11 3.12 --release

  sdist:
    runs-on: ubuntu-latest
    needs: is-python-release
    env:
      CXXFLAGS: "-std=c++11"
    strategy: 
      matrix: 
        package-name: [qcs-sdk-python, qcs-sdk-python-grpc-web]
    steps:
    - uses: ./.github/action-common-python-release
      with:
        package-name: ${{ matrix.package-name }}
        maturin-command: sdist

  publish:
    runs-on: ubuntu-latest
    # `needs` forces this job to wait until all specified jobs
    # are finished to run. Typically, those jobs would all have
    # to be successful, but when combined with `if: always()`,
    # this job is allowed to run after all the needed jobs
    # finish, regardless of their outcome. In this case, we
    # still make sure that at least a source distribution
    # can be published.
    needs: [ macos, linux, windows, sdist ]
    if: always() && needs.sdist.result == 'success'
    permissions:
      id-token: write
    strategy: 
      matrix: 
        package-name: [qcs-sdk-python, qcs-sdk-python-grpc-web]
    steps:
      - uses: actions/download-artifact@v3
      # - name: Publish to PyPI
      #   uses: messense/maturin-action@v1
      #   with:
      #     command: upload
      #     args: --skip-existing wheels_${{ matrix.package-name }}/*
