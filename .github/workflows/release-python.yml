name: Release Python

# TODO: This should be changed to workflow-dispatch before being merged to main
on:
  push:
    branches:
      - 135-python-bindings-distribution

jobs:
  macos:
    if: ${{ false }}  # disable while testing linux-arm
    runs-on: macos-11
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build
        run: cargo build --release
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: -i python --release --manifest-path crates/python/Cargo.toml --out dist --sdist
      - name: Install wheel - x86_64
        run: |
          pip install qcs-sdk-python --no-index --find-links dist --force-reinstall
      - name: Build wheels - universal2
        if: ${{ matrix.python-version >= '3.8' || matrix.python-version == '3.10' }}
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --universal2 --manifest-path crates/python/Cargo.toml --out dist
      - name: Install wheel - universal2
        run: |
          pip install qcs-sdk-python --no-index --find-links dist --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
  linux:
    if: ${{ false }}  # disable while testing linux-arm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Install OpenSSL # Required by Rust dependency
      run: sudo apt-get install -y libssl-dev
    - name: Build
      run: cargo build --release
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: x86_64
        manylinux: 2014
        args: -i ${{ matrix.python-version }} --release --manifest-path crates/python/Cargo.toml --out dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  linux-arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
        target: [aarch64, armv7]
    steps:
    - uses: actions/checkout@v2
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: 2014
        args: -i ${{ matrix.python }} --release --manifest-path crates/python/Cargo.toml --out dist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ linux-arm ] # [ macos, linux, linux-arm ]
    steps:
      - uses: actions/download-artifact@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          MATURIN_USERNAME: ${{ secrets.PYPI_USERNAME }}
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          MATURIN_REPOSITORY: testpypi
        uses: messense/maturin-action@v1
        with:
          command: upload 
          args: --skip-existing wheels/*
