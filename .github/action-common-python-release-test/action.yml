name: "Base Python Release Test"
description: "Common tasks required to test the release python wheels on any platform"

inputs:
  package-name:
    required: true
    description: "Either `qcs-sdk-python` or `qcs-sdk-python-grpc-web`"

  python-version:
    required: true
    description: "Python version used for script steps"

  python-architecture:
    description: "Python architecture used for script steps"
  rust-target:
    description: "Rust target used for script steps"
  maturin-target:
    description: "Rust target used for maturin compilation"
  maturin-container:
    description: "Docker container used for maturin compilation"
  maturin-extra-args:
    description: "Extra maturin command arguments"

runs:
  using: "composite"
  steps:

  - uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python-version }}
      architecture: ${{ inputs.python-architecture }}

  - name: Install Rust Toolchain
    uses: actions-rs/toolchain@v1
    with:
      toolchain: stable
      target: ${{ inputs.rust-target }}
      profile: minimal
      default: true

  - name: Maturin Build
    uses: messense/maturin-action@v1
    with:
      manylinux: '2_34'
      command: build
      container: ${{ inputs.maturin-container }}
      target: ${{ inputs.maturin-target }}
      args: -i ${{ inputs.python-version }} --release --manifest-path crates/python/Cargo.toml --out dist ${{ inputs.package-name == 'qcs-sdk-python-grpc-web' && '-F grpc-web' || '' }} ${{ inputs.maturin-extra-args }}
      docker-options: -e CI

  # host will not be able to install wheel in this case
  - if: inputs.maturin-target != 'ppc64le'
    name: Install wheel
    shell: bash
    run: |
      pip install ${{ inputs.package-name }} --find-links dist --force-reinstall

  - name: Test Install Wheel
    shell: bash
    run: |
      pip install dist/*.whl
