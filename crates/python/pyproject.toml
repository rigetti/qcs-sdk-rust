# This is the metadata Maturin uploads to PyPI on publish
[project]
name = "qcs-sdk-python"
version = "0.16.0"
description = "Python interface for the QCS Rust SDK"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
  { name = "Rigetti Computing", email = "softapps@rigetti.com" },
  { name = "Mark Skilbeck", email = "mark.skilbeck@rigetti.com" },
  { name = "Marquess Valdez", email = "mvaldez@rigetti.com" },
  { name = "Randall Fulton", email = "rfulton@rigetti.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent",
]
dependencies = ["quil==0.6.2"]

# PEP 621 specifies the [project] table as the source for project metadata. However, Poetry only supports [tool.poetry]
# We can remove this table once this issue is resolved: https://github.com/python-poetry/poetry/issues/3332
[tool.poetry]
name = "qcs-sdk-python"
version = "0.16.0"
description = "Python interface for the QCS Rust SDK"
readme = "README.md"
authors = [
  "Rigetti Computing <softapps@rigetti.com>",
  "Mark Skilbeck <mark.skilbeck@rigetti.com>",
  "Marquess Valdez <mvaldez@rigetti.com>",
  "Randall Fulton <rfulton@rigetti.com>",
]

[tool.maturin]
features = ["pyo3/extension-module"]
bindings = "pyo3"
compatibility = "linux"
sdist-include = ["README.md"]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
numpy = "^1.24.1"
maturin = "^1.2.3"
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
black = "^22.8.0"
syrupy = "^3.0.6"
mypy = "^1.4.1"
pdoc = "^14.1.0"

[build-system]
requires = ["maturin>=1.0.0,<2.0.0"]
build-backend = "maturin"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.pyright]
# This diagnostic is raised when a type stub is found without a corresponding source file. This is
# necessarily the case for a pure Rust pyo3 module, so disabling it.
reportMissingModuleSource = false
